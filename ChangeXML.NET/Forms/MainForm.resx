<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>